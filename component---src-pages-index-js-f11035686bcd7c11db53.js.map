{"version":3,"file":"component---src-pages-index-js-f11035686bcd7c11db53.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./node_modules/@chakra-ui/image/dist/chakra-ui-image.esm.js","webpack://gatsby-starter-blog/./src/images/temp-blog.jpg","webpack://gatsby-starter-blog/./src/pages/blog.js","webpack://gatsby-starter-blog/./node_modules/@chakra-ui/form-control/dist/chakra-ui-form-control.esm.js","webpack://gatsby-starter-blog/./node_modules/@chakra-ui/checkbox/dist/chakra-ui-checkbox.esm.js","webpack://gatsby-starter-blog/./src/components/splash/splash-screen.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import { forwardRef, chakra } from '@chakra-ui/system';\nimport { omit, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { useSafeLayoutEffect } from '@chakra-ui/hooks';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * React hook that loads an image in the browser,\n * and let's us know the `status` so we can show image\n * fallback if it is still `pending`\n *\n * @returns the status of the image loading progress\n *\n * @example\n *\n * ```jsx\n * function App(){\n *   const status = useImage({ src: \"image.png\" })\n *   return status === \"loaded\" ? <img src=\"image.png\" /> : <Placeholder />\n * }\n * ```\n */\n\n\nfunction useImage(props) {\n  var loading = props.loading,\n      src = props.src,\n      srcSet = props.srcSet,\n      onLoad = props.onLoad,\n      onError = props.onError,\n      crossOrigin = props.crossOrigin,\n      sizes = props.sizes,\n      ignoreFallback = props.ignoreFallback;\n\n  var _useState = useState(\"pending\"),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  useEffect(function () {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  var imageRef = useRef();\n  var load = useCallback(function () {\n    if (!src) return;\n    flush();\n    var img = new Image();\n    img.src = src;\n    if (crossOrigin) img.crossOrigin = crossOrigin;\n    if (srcSet) img.srcset = srcSet;\n    if (sizes) img.sizes = sizes;\n    if (loading) img.loading = loading;\n\n    img.onload = function (event) {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n\n    img.onerror = function (error) {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n\n  var flush = function flush() {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n\n  useSafeLayoutEffect(function () {\n    /**\n     * If user opts out of the fallback/placeholder\n     * logic, let's bail out.\n     */\n    if (ignoreFallback) return undefined;\n\n    if (status === \"loading\") {\n      load();\n    }\n\n    return function () {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  /**\n   * If user opts out of the fallback/placeholder\n   * logic, let's just return 'loaded'\n   */\n\n  return ignoreFallback ? \"loaded\" : status;\n}\n\nvar _excluded = [\"htmlWidth\", \"htmlHeight\", \"alt\"],\n    _excluded2 = [\"fallbackSrc\", \"fallback\", \"src\", \"srcSet\", \"align\", \"fit\", \"loading\", \"ignoreFallback\", \"crossOrigin\"];\nvar NativeImage = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var htmlWidth = props.htmlWidth,\n      htmlHeight = props.htmlHeight,\n      alt = props.alt,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"img\", _extends({\n    width: htmlWidth,\n    height: htmlHeight,\n    ref: ref,\n    alt: alt\n  }, rest));\n});\n/**\n * React component that renders an image with support\n * for fallbacks\n *\n * @see Docs https://chakra-ui.com/image\n */\n\nvar Image$1 = /*#__PURE__*/forwardRef(function (props, ref) {\n  var fallbackSrc = props.fallbackSrc,\n      fallback = props.fallback,\n      src = props.src,\n      srcSet = props.srcSet,\n      align = props.align,\n      fit = props.fit,\n      loading = props.loading,\n      ignoreFallback = props.ignoreFallback,\n      crossOrigin = props.crossOrigin,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n  /**\n   * Defer to native `img` tag if `loading` prop is passed\n   * @see https://github.com/chakra-ui/chakra-ui/issues/1027\n   */\n\n\n  var shouldIgnore = loading != null || ignoreFallback || fallbackSrc === undefined && fallback === undefined; // if the user doesn't provide any kind of fallback we should ignore it\n\n  var status = useImage(_extends({}, props, {\n    ignoreFallback: shouldIgnore\n  }));\n\n  var shared = _extends({\n    ref: ref,\n    objectFit: fit,\n    objectPosition: align\n  }, shouldIgnore ? rest : omit(rest, [\"onError\", \"onLoad\"]));\n\n  if (status !== \"loaded\") {\n    /**\n     * If user passed a custom fallback component,\n     * let's render it here.\n     */\n    if (fallback) return fallback;\n    return /*#__PURE__*/React.createElement(chakra.img, _extends({\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc\n    }, shared));\n  }\n\n  return /*#__PURE__*/React.createElement(chakra.img, _extends({\n    as: NativeImage,\n    src: src,\n    srcSet: srcSet,\n    crossOrigin: crossOrigin,\n    loading: loading,\n    className: \"chakra-image\"\n  }, shared));\n});\n/**\n * Fallback component for most SSR users who want to use the native `img` with\n * support for chakra props\n */\n\nvar Img = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(chakra.img, _extends({\n    ref: ref,\n    as: NativeImage,\n    className: \"chakra-image\"\n  }, props));\n});\n\nif (__DEV__) {\n  Image$1.displayName = \"Image\";\n}\n\nexport { Image$1 as Image, Img, useImage };","export default __webpack_public_path__ + \"static/temp-blog-f08846e370c78ea6066fd23c6a1c2ff9.jpg\";","import React from \"react\";\nimport { SimpleGrid, Box, Image, VStack } from '@chakra-ui/react'\nimport TempBlog from '../images/temp-blog.jpg';\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout/layout\";\nimport Seo from \"../components/layout/seo\";\n\nconst Blog = ({ data, location }) => {\n    const posts = data.allMarkdownRemark.nodes;\n\n    return (\n        <Layout>\n            <Seo title=\"All posts\" />\n            <SimpleGrid columns={[1, null, 2, 3]} spacing='40px' justifyItems=\"center\">\n                {\n                    posts.map(post => {\n                        const title = post.frontmatter.title || post.fields.slug\n                        return (\n                            <Box maxW='sm' borderWidth='1px' borderRadius='lg' overflow='hidden' className=\"blog-card\" key={post.fields.slug}>\n                                <Image src={TempBlog} alt=\"temporary image\" />\n                                <Box p='6'>\n                                    <VStack spacing={4} align=\"flex-start\">\n                                        <Link to={post.fields.slug} itemProp=\"url\">\n                                            <Box\n                                                mt='1'\n                                                fontWeight='semibold'\n                                                as='h4'\n                                                lineHeight='tight'\n                                                isTruncated\n                                            >\n                                                {title}\n                                            </Box>\n\n                                            <Box>\n                                                <p\n                                                    dangerouslySetInnerHTML={{\n                                                        __html: post.frontmatter.description || post.excerpt,\n                                                    }}\n                                                    itemProp=\"description\"\n                                                />\n                                            </Box>\n                                        </Link>\n\n\n                                        <Box display='flex' mt='2' alignItems='center'>\n                                            <Box as='span' color='gray.600' fontSize='sm'>\n                                                {post.frontmatter.date}\n                                            </Box>\n                                        </Box>\n                                    </VStack>\n\n                                </Box>\n                            </Box>\n                        )\n                    })\n                }\n            </SimpleGrid>\n        </Layout>\n    )\n}\n\nexport default Blog;\n\n\nexport const pageQuery = graphql`\n            query {\n                site {\n                siteMetadata {\n                title\n            }\n    }\n            allMarkdownRemark(sort: {fields: [frontmatter___date], order: DESC }) {\n                nodes {\n                excerpt\n        fields {\n                slug\n            }\n            frontmatter {\n                date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n        }\n      }\n    }\n  }\n            `\n","import { useId, useBoolean } from '@chakra-ui/hooks';\nimport { forwardRef, useMultiStyleConfig, omitThemingProps, StylesProvider, chakra, useStyles, useStyleConfig } from '@chakra-ui/system';\nimport { cx, __DEV__, dataAttr, callAllHandlers, ariaAttr } from '@chakra-ui/utils';\nimport { createContext, mergeRefs } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport Icon from '@chakra-ui/icon';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$2 = [\"id\", \"isRequired\", \"isInvalid\", \"isDisabled\", \"isReadOnly\"],\n    _excluded2$1 = [\"getRootProps\", \"htmlProps\"];\n\nvar _createContext = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n}),\n    FormControlProvider = _createContext[0],\n    useFormControlContext = _createContext[1];\n\nfunction useFormControlProvider(props) {\n  var idProp = props.id,\n      isRequired = props.isRequired,\n      isInvalid = props.isInvalid,\n      isDisabled = props.isDisabled,\n      isReadOnly = props.isReadOnly,\n      htmlProps = _objectWithoutPropertiesLoose(props, _excluded$2); // Generate all the required ids\n\n\n  var uuid = useId();\n  var id = idProp || \"field-\" + uuid;\n  var labelId = id + \"-label\";\n  var feedbackId = id + \"-feedback\";\n  var helpTextId = id + \"-helptext\";\n  /**\n   * Track whether the `FormErrorMessage` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n\n  var _React$useState = React.useState(false),\n      hasFeedbackText = _React$useState[0],\n      setHasFeedbackText = _React$useState[1];\n  /**\n   * Track whether the `FormHelperText` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n\n\n  var _React$useState2 = React.useState(false),\n      hasHelpText = _React$useState2[0],\n      setHasHelpText = _React$useState2[1]; // Track whether the form element (e.g, `input`) has focus.\n\n\n  var _useBoolean = useBoolean(),\n      isFocused = _useBoolean[0],\n      setFocus = _useBoolean[1];\n\n  var getHelpTextProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({\n      id: helpTextId\n    }, props, {\n      /**\n       * Notify the field context when the help text is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setHasHelpText(true);\n      })\n    });\n  }, [helpTextId]);\n  var getLabelProps = React.useCallback(function (props, forwardedRef) {\n    var _props$id, _props$htmlFor;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      \"data-focus\": dataAttr(isFocused),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      id: (_props$id = props.id) != null ? _props$id : labelId,\n      htmlFor: (_props$htmlFor = props.htmlFor) != null ? _props$htmlFor : id\n    });\n  }, [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]);\n  var getErrorMessageProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({\n      id: feedbackId\n    }, props, {\n      /**\n       * Notify the field context when the error message is rendered on screen,\n       * so we can apply the correct `aria-describedby` to the field (e.g. input, textarea).\n       */\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    });\n  }, [feedbackId]);\n  var getRootProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, htmlProps, {\n      ref: forwardedRef,\n      role: \"group\"\n    });\n  }, [htmlProps]);\n  var getRequiredIndicatorProps = React.useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props.children || \"*\"\n    });\n  }, []);\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: setFocus.on,\n    onBlur: setFocus.off,\n    hasFeedbackText: hasFeedbackText,\n    setHasFeedbackText: setHasFeedbackText,\n    hasHelpText: hasHelpText,\n    setHasHelpText: setHasHelpText,\n    id: id,\n    labelId: labelId,\n    feedbackId: feedbackId,\n    helpTextId: helpTextId,\n    htmlProps: htmlProps,\n    getHelpTextProps: getHelpTextProps,\n    getErrorMessageProps: getErrorMessageProps,\n    getRootProps: getRootProps,\n    getLabelProps: getLabelProps,\n    getRequiredIndicatorProps: getRequiredIndicatorProps\n  };\n}\n/**\n * FormControl provides context such as\n * `isInvalid`, `isDisabled`, and `isRequired` to form elements.\n *\n * This is commonly used in form elements such as `input`,\n * `select`, `textarea`, etc.\n */\n\n\nvar FormControl = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"Form\", props);\n  var ownProps = omitThemingProps(props);\n\n  var _useFormControlProvid = useFormControlProvider(ownProps),\n      getRootProps = _useFormControlProvid.getRootProps;\n\n  _useFormControlProvid.htmlProps;\n\n  var context = _objectWithoutPropertiesLoose(_useFormControlProvid, _excluded2$1);\n\n  var className = cx(\"chakra-form-control\", props.className);\n  return /*#__PURE__*/React.createElement(FormControlProvider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({}, getRootProps({}, ref), {\n    className: className,\n    __css: styles[\"container\"]\n  }))));\n});\n\nif (__DEV__) {\n  FormControl.displayName = \"FormControl\";\n}\n/**\n * FormHelperText\n *\n * Assistive component that conveys additional guidance\n * about the field, such as how it will be used and what\n * types in values should be provided.\n */\n\n\nvar FormHelperText = /*#__PURE__*/forwardRef(function (props, ref) {\n  var field = useFormControlContext();\n  var styles = useStyles();\n  var className = cx(\"chakra-form__helper-text\", props.className);\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, field == null ? void 0 : field.getHelpTextProps(props, ref), {\n    __css: styles.helperText,\n    className: className\n  }));\n});\n\nif (__DEV__) {\n  FormHelperText.displayName = \"FormHelperText\";\n}\n\nvar _excluded$1 = [\"isDisabled\", \"isInvalid\", \"isReadOnly\", \"isRequired\"],\n    _excluded2 = [\"id\", \"disabled\", \"readOnly\", \"required\", \"isRequired\", \"isInvalid\", \"isReadOnly\", \"isDisabled\", \"onFocus\", \"onBlur\"];\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n *\n * @internal\n */\n\nfunction useFormControl(props) {\n  var _useFormControlProps = useFormControlProps(props),\n      isDisabled = _useFormControlProps.isDisabled,\n      isInvalid = _useFormControlProps.isInvalid,\n      isReadOnly = _useFormControlProps.isReadOnly,\n      isRequired = _useFormControlProps.isRequired,\n      rest = _objectWithoutPropertiesLoose(_useFormControlProps, _excluded$1);\n\n  return _extends({}, rest, {\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  });\n}\n/**\n * @internal\n */\n\n\nfunction useFormControlProps(props) {\n  var _ref, _ref2, _ref3;\n\n  var field = useFormControlContext();\n\n  var id = props.id,\n      disabled = props.disabled,\n      readOnly = props.readOnly,\n      required = props.required,\n      isRequired = props.isRequired,\n      isInvalid = props.isInvalid,\n      isReadOnly = props.isReadOnly,\n      isDisabled = props.isDisabled,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n\n  var labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : []; // Error message must be described first in all scenarios.\n\n  if (field != null && field.hasFeedbackText && field != null && field.isInvalid) {\n    labelIds.push(field.feedbackId);\n  }\n\n  if (field != null && field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n\n  return _extends({}, rest, {\n    \"aria-describedby\": labelIds.join(\" \") || undefined,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_ref = disabled != null ? disabled : isDisabled) != null ? _ref : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_ref2 = readOnly != null ? readOnly : isReadOnly) != null ? _ref2 : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_ref3 = required != null ? required : isRequired) != null ? _ref3 : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  });\n}\n/**\n * Used to provide feedback about an invalid input,\n * and suggest clear instructions on how to fix it.\n */\n\n\nvar FormErrorMessage = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useMultiStyleConfig(\"FormError\", props);\n  var ownProps = omitThemingProps(props);\n  var field = useFormControlContext();\n  if (!(field != null && field.isInvalid)) return null;\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.div, _extends({}, field == null ? void 0 : field.getErrorMessageProps(ownProps, ref), {\n    className: cx(\"chakra-form__error-message\", props.className),\n    __css: _extends({\n      display: \"flex\",\n      alignItems: \"center\"\n    }, styles.text)\n  })));\n});\n\nif (__DEV__) {\n  FormErrorMessage.displayName = \"FormErrorMessage\";\n}\n/**\n * Used as the visual indicator that a field is invalid or\n * a field has incorrect values.\n */\n\n\nvar FormErrorIcon = /*#__PURE__*/forwardRef(function (props, ref) {\n  var styles = useStyles();\n  var field = useFormControlContext();\n  if (!(field != null && field.isInvalid)) return null;\n\n  var _className = cx(\"chakra-form__error-icon\", props.className);\n\n  return /*#__PURE__*/React.createElement(Icon, _extends({\n    ref: ref,\n    \"aria-hidden\": true\n  }, props, {\n    __css: styles.icon,\n    className: _className\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M11.983,0a12.206,12.206,0,0,0-8.51,3.653A11.8,11.8,0,0,0,0,12.207,11.779,11.779,0,0,0,11.8,24h.214A12.111,12.111,0,0,0,24,11.791h0A11.766,11.766,0,0,0,11.983,0ZM10.5,16.542a1.476,1.476,0,0,1,1.449-1.53h.027a1.527,1.527,0,0,1,1.523,1.47,1.475,1.475,0,0,1-1.449,1.53h-.027A1.529,1.529,0,0,1,10.5,16.542ZM11,12.5v-6a1,1,0,0,1,2,0v6a1,1,0,1,1-2,0Z\"\n  }));\n});\n\nif (__DEV__) {\n  FormErrorIcon.displayName = \"FormErrorIcon\";\n}\n\nvar _excluded = [\"className\", \"children\", \"requiredIndicator\"];\n/**\n * Used to enhance the usability of form controls.\n *\n * It is used to inform users as to what information\n * is requested for a form field.\n *\n * ♿️ Accessibility: Every form field should have a form label.\n */\n\nvar FormLabel = /*#__PURE__*/forwardRef(function (passedProps, ref) {\n  var _field$getLabelProps;\n\n  var styles = useStyleConfig(\"FormLabel\", passedProps);\n  var props = omitThemingProps(passedProps);\n  props.className;\n\n  var children = props.children,\n      _props$requiredIndica = props.requiredIndicator,\n      requiredIndicator = _props$requiredIndica === void 0 ? /*#__PURE__*/React.createElement(RequiredIndicator, null) : _props$requiredIndica,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var field = useFormControlContext();\n  var ownProps = (_field$getLabelProps = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _field$getLabelProps : _extends({\n    ref: ref\n  }, rest);\n  return /*#__PURE__*/React.createElement(chakra.label, _extends({}, ownProps, {\n    className: cx(\"chakra-form__label\", props.className),\n    __css: _extends({\n      display: \"block\",\n      textAlign: \"start\"\n    }, styles)\n  }), children, field != null && field.isRequired ? requiredIndicator : null);\n});\n\nif (__DEV__) {\n  FormLabel.displayName = \"FormLabel\";\n}\n/**\n * Used to show a \"required\" text or an asterisks (*) to indicate that\n * a field is required.\n */\n\n\nvar RequiredIndicator = /*#__PURE__*/forwardRef(function (props, ref) {\n  var field = useFormControlContext();\n  var styles = useStyles();\n  if (!(field != null && field.isRequired)) return null;\n  var className = cx(\"chakra-form__required-indicator\", props.className);\n  return /*#__PURE__*/React.createElement(chakra.span, _extends({}, field == null ? void 0 : field.getRequiredIndicatorProps(props, ref), {\n    __css: styles.requiredIndicator,\n    className: className\n  }));\n});\n\nif (__DEV__) {\n  RequiredIndicator.displayName = \"RequiredIndicator\";\n}\n\nexport { FormControl, FormErrorIcon, FormErrorMessage, FormHelperText, FormLabel, RequiredIndicator, useFormControl, useFormControlContext, useFormControlProps };","import { isInputEvent, addItem, __DEV__, omit, warn, dataAttr, callAllHandlers, focus, callAll, cx } from '@chakra-ui/utils';\nimport { createContext, mergeRefs } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport { useCallback, useRef, useState } from 'react';\nimport { useCallbackRef, useControllableState, useBoolean, useControllableProp, useSafeLayoutEffect, useUpdateEffect } from '@chakra-ui/hooks';\nimport { chakra, forwardRef, useMultiStyleConfig, omitThemingProps } from '@chakra-ui/system';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useFormControlProps } from '@chakra-ui/form-control';\nimport { visuallyHiddenStyle } from '@chakra-ui/visually-hidden';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n/**\n * React hook that provides all the state management logic\n * for a group of checkboxes.\n *\n * It is consumed by the `CheckboxGroup` component\n */\n\n\nfunction useCheckboxGroup(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      defaultValue = _props.defaultValue,\n      valueProp = _props.value,\n      onChange = _props.onChange,\n      isDisabled = _props.isDisabled,\n      isNative = _props.isNative;\n  var onChangeProp = useCallbackRef(onChange);\n\n  var _useControllableState = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue || [],\n    onChange: onChangeProp\n  }),\n      value = _useControllableState[0],\n      setValue = _useControllableState[1];\n\n  var handleChange = useCallback(function (eventOrValue) {\n    if (!value) return;\n    var isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);\n    var selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n    var nextValue = isChecked ? addItem(value, selectedValue) : value.filter(function (v) {\n      return String(v) !== String(selectedValue);\n    });\n    setValue(nextValue);\n  }, [setValue, value]);\n  var getCheckboxProps = useCallback(function (props) {\n    var _extends2;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    var checkedKey = isNative ? \"checked\" : \"isChecked\";\n    return _extends({}, props, (_extends2 = {}, _extends2[checkedKey] = value.some(function (val) {\n      return String(props.value) === String(val);\n    }), _extends2.onChange = handleChange, _extends2));\n  }, [handleChange, isNative, value]);\n  return {\n    value: value,\n    isDisabled: isDisabled,\n    onChange: handleChange,\n    setValue: setValue,\n    getCheckboxProps: getCheckboxProps\n  };\n}\n\nvar _createContext = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n}),\n    CheckboxGroupProvider = _createContext[0],\n    useCheckboxGroupContext = _createContext[1];\n/**\n * Used for multiple checkboxes which are bound in one group,\n * and it indicates whether one or more options are selected.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\n\n\nvar CheckboxGroup = function CheckboxGroup(props) {\n  var colorScheme = props.colorScheme,\n      size = props.size,\n      variant = props.variant,\n      children = props.children,\n      isDisabled = props.isDisabled;\n\n  var _useCheckboxGroup = useCheckboxGroup(props),\n      value = _useCheckboxGroup.value,\n      onChange = _useCheckboxGroup.onChange;\n\n  var group = React.useMemo(function () {\n    return {\n      size: size,\n      onChange: onChange,\n      colorScheme: colorScheme,\n      value: value,\n      variant: variant,\n      isDisabled: isDisabled\n    };\n  }, [size, onChange, colorScheme, value, variant, isDisabled]);\n  return /*#__PURE__*/React.createElement(CheckboxGroupProvider, {\n    value: group\n  }, children);\n};\n\nif (__DEV__) {\n  CheckboxGroup.displayName = \"CheckboxGroup\";\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$2 = [\"isIndeterminate\", \"isChecked\"];\nvar MotionSvg = \"custom\" in motion ? motion.custom(chakra.svg) : motion(chakra.svg);\n\nvar CheckIcon = function CheckIcon(props) {\n  return /*#__PURE__*/React.createElement(MotionSvg, _extends({\n    width: \"1.2em\",\n    viewBox: \"0 0 12 10\",\n    variants: {\n      unchecked: {\n        opacity: 0,\n        strokeDashoffset: 16\n      },\n      checked: {\n        opacity: 1,\n        strokeDashoffset: 0,\n        transition: {\n          duration: 0.2\n        }\n      }\n    },\n    style: {\n      fill: \"none\",\n      strokeWidth: 2,\n      stroke: \"currentColor\",\n      strokeDasharray: 16\n    }\n  }, props), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"1.5 6 4.5 9 10.5 1\"\n  }));\n};\n\nvar IndeterminateIcon = function IndeterminateIcon(props) {\n  return /*#__PURE__*/React.createElement(MotionSvg, _extends({\n    width: \"1.2em\",\n    viewBox: \"0 0 24 24\",\n    variants: {\n      unchecked: {\n        scaleX: 0.65,\n        opacity: 0\n      },\n      checked: {\n        scaleX: 1,\n        opacity: 1,\n        transition: {\n          scaleX: {\n            duration: 0\n          },\n          opacity: {\n            duration: 0.02\n          }\n        }\n      }\n    },\n    style: {\n      stroke: \"currentColor\",\n      strokeWidth: 4\n    }\n  }, props), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"21\",\n    x2: \"3\",\n    y1: \"12\",\n    y2: \"12\"\n  }));\n};\n\nvar CheckboxTransition = function CheckboxTransition(_ref) {\n  var open = _ref.open,\n      children = _ref.children;\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    initial: false\n  }, open && /*#__PURE__*/React.createElement(motion.div, {\n    variants: {\n      unchecked: {\n        scale: 0.5\n      },\n      checked: {\n        scale: 1\n      }\n    },\n    initial: \"unchecked\",\n    animate: \"checked\",\n    exit: \"unchecked\",\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    }\n  }, children));\n};\n/**\n * CheckboxIcon is used to visually indicate the checked or indeterminate\n * state of a checkbox.\n *\n * @todo allow users pass their own icon svgs\n */\n\n\nvar CheckboxIcon = function CheckboxIcon(props) {\n  var isIndeterminate = props.isIndeterminate,\n      isChecked = props.isChecked,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$2);\n\n  var IconEl = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return /*#__PURE__*/React.createElement(CheckboxTransition, {\n    open: isChecked || isIndeterminate\n  }, /*#__PURE__*/React.createElement(IconEl, rest));\n};\n\nvar _excluded$1 = [\"defaultIsChecked\", \"defaultChecked\", \"isChecked\", \"isFocusable\", \"onChange\", \"isIndeterminate\", \"name\", \"value\", \"tabIndex\", \"aria-label\", \"aria-labelledby\", \"aria-invalid\"];\n/**\n * useCheckbox that provides all the state and focus management logic\n * for a checkbox. It is consumed by the `Checkbox` component\n *\n * @see Docs https://chakra-ui.com/checkbox#hooks\n */\n\nfunction useCheckbox(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var formControlProps = useFormControlProps(props);\n  var isDisabled = formControlProps.isDisabled,\n      isReadOnly = formControlProps.isReadOnly,\n      isRequired = formControlProps.isRequired,\n      isInvalid = formControlProps.isInvalid,\n      id = formControlProps.id,\n      onBlur = formControlProps.onBlur,\n      onFocus = formControlProps.onFocus,\n      ariaDescribedBy = formControlProps[\"aria-describedby\"];\n\n  var _props = props,\n      defaultIsChecked = _props.defaultIsChecked,\n      _props$defaultChecked = _props.defaultChecked,\n      defaultChecked = _props$defaultChecked === void 0 ? defaultIsChecked : _props$defaultChecked,\n      checkedProp = _props.isChecked,\n      isFocusable = _props.isFocusable,\n      onChange = _props.onChange,\n      isIndeterminate = _props.isIndeterminate,\n      name = _props.name,\n      value = _props.value,\n      _props$tabIndex = _props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? undefined : _props$tabIndex,\n      ariaLabel = _props[\"aria-label\"],\n      ariaLabelledBy = _props[\"aria-labelledby\"],\n      ariaInvalid = _props[\"aria-invalid\"],\n      rest = _objectWithoutPropertiesLoose(_props, _excluded$1);\n\n  var htmlProps = omit(rest, [\"isDisabled\", \"isReadOnly\", \"isRequired\", \"isInvalid\", \"id\", \"onBlur\", \"onFocus\", \"aria-describedby\"]);\n  var onChangeProp = useCallbackRef(onChange);\n  var onBlurProp = useCallbackRef(onBlur);\n  var onFocusProp = useCallbackRef(onFocus);\n\n  var _useBoolean = useBoolean(),\n      isFocused = _useBoolean[0],\n      setFocused = _useBoolean[1];\n\n  var _useBoolean2 = useBoolean(),\n      isHovered = _useBoolean2[0],\n      setHovered = _useBoolean2[1];\n\n  var _useBoolean3 = useBoolean(),\n      isActive = _useBoolean3[0],\n      setActive = _useBoolean3[1];\n\n  var inputRef = useRef(null);\n\n  var _useState = useState(true),\n      rootIsLabelElement = _useState[0],\n      setRootIsLabelElement = _useState[1];\n\n  var _useState2 = useState(!!defaultChecked),\n      checkedState = _useState2[0],\n      setCheckedState = _useState2[1];\n\n  var _useControllableProp = useControllableProp(checkedProp, checkedState),\n      isControlled = _useControllableProp[0],\n      isChecked = _useControllableProp[1];\n\n  warn({\n    condition: !!defaultIsChecked,\n    message: 'The \"defaultIsChecked\" prop has been deprecated and will be removed in a future version. ' + 'Please use the \"defaultChecked\" prop instead, which mirrors default React checkbox behavior.'\n  });\n  var handleChange = useCallback(function (event) {\n    if (isReadOnly || isDisabled) {\n      event.preventDefault();\n      return;\n    }\n\n    if (!isControlled) {\n      if (isChecked) {\n        setCheckedState(event.target.checked);\n      } else {\n        setCheckedState(isIndeterminate ? true : event.target.checked);\n      }\n    }\n\n    onChangeProp == null ? void 0 : onChangeProp(event);\n  }, [isReadOnly, isDisabled, isChecked, isControlled, isIndeterminate, onChangeProp]);\n  useSafeLayoutEffect(function () {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate);\n    }\n  }, [isIndeterminate]);\n  useUpdateEffect(function () {\n    if (isDisabled) {\n      setFocused.off();\n    }\n  }, [isDisabled, setFocused]);\n  var trulyDisabled = isDisabled && !isFocusable;\n  var onKeyDown = useCallback(function (event) {\n    if (event.key === \" \") {\n      setActive.on();\n    }\n  }, [setActive]);\n  var onKeyUp = useCallback(function (event) {\n    if (event.key === \" \") {\n      setActive.off();\n    }\n  }, [setActive]);\n  /**\n   * Sync state with uncontrolled form libraries like `react-hook-form`.\n   *\n   * These libraries set the checked value for input fields\n   * using their refs. For the checkbox, it sets `ref.current.checked = true | false` directly.\n   *\n   * This means the `isChecked` state will get out of sync with `ref.current.checked`,\n   * even though the input validation with work, the UI will not be up to date.\n   *\n   * Let's correct that by checking and syncing the state accordingly.\n   */\n\n  useSafeLayoutEffect(function () {\n    if (!inputRef.current) return;\n    var notInSync = inputRef.current.checked !== isChecked;\n\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked);\n    }\n  }, [inputRef.current]);\n  var getCheckboxProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    var onPressDown = function onPressDown(event) {\n      // On mousedown, the input blurs and returns focus to the `body`,\n      // we need to prevent this. Native checkboxes keeps focus on `input`\n      event.preventDefault();\n      setActive.on();\n    };\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props.onMouseDown, onPressDown),\n      onMouseUp: callAllHandlers(props.onMouseUp, setActive.off),\n      onMouseEnter: callAllHandlers(props.onMouseEnter, setHovered.on),\n      onMouseLeave: callAllHandlers(props.onMouseLeave, setHovered.off)\n    });\n  }, [isActive, isChecked, isDisabled, isFocused, isHovered, isIndeterminate, isInvalid, isReadOnly, setActive, setHovered.off, setHovered.on]);\n  var getRootProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, htmlProps, props, {\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setRootIsLabelElement(node.tagName === \"LABEL\");\n      }),\n      onClick: callAllHandlers(props.onClick, function () {\n        /**\n         * Accessibility:\n         *\n         * Ideally, `getRootProps` should be spread unto a `label` element.\n         *\n         * If the element was changed using the `as` prop or changing\n         * the dom node `getRootProps` is spread unto (to a `div` or `span`), we'll trigger\n         * click on the input when the element is clicked.\n         * @see Issue https://github.com/chakra-ui/chakra-ui/issues/3480\n         */\n        if (!rootIsLabelElement) {\n          var _inputRef$current;\n\n          (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.click();\n          focus(inputRef.current, {\n            nextTick: true\n          });\n        }\n      }),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    });\n  }, [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement]);\n  var getInputProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: mergeRefs(inputRef, forwardedRef),\n      type: \"checkbox\",\n      name: name,\n      value: value,\n      id: id,\n      tabIndex: tabIndex,\n      onChange: callAllHandlers(props.onChange, handleChange),\n      onBlur: callAllHandlers(props.onBlur, onBlurProp, setFocused.off),\n      onFocus: callAllHandlers(props.onFocus, onFocusProp, setFocused.on),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n      onKeyUp: callAllHandlers(props.onKeyUp, onKeyUp),\n      required: isRequired,\n      checked: isChecked,\n      disabled: trulyDisabled,\n      readOnly: isReadOnly,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-disabled\": isDisabled,\n      style: visuallyHiddenStyle\n    });\n  }, [name, value, id, handleChange, setFocused.off, setFocused.on, onBlurProp, onFocusProp, onKeyDown, onKeyUp, isRequired, isChecked, trulyDisabled, isReadOnly, ariaLabel, ariaLabelledBy, ariaInvalid, isInvalid, ariaDescribedBy, isDisabled, tabIndex]);\n  var getLabelProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      onMouseDown: callAllHandlers(props.onMouseDown, stopEvent),\n      onTouchStart: callAllHandlers(props.onTouchStart, stopEvent),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    });\n  }, [isChecked, isDisabled, isInvalid]);\n  var state = {\n    isInvalid: isInvalid,\n    isFocused: isFocused,\n    isChecked: isChecked,\n    isActive: isActive,\n    isHovered: isHovered,\n    isIndeterminate: isIndeterminate,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    isRequired: isRequired\n  };\n  return {\n    state: state,\n    getRootProps: getRootProps,\n    getCheckboxProps: getCheckboxProps,\n    getInputProps: getInputProps,\n    getLabelProps: getLabelProps,\n    htmlProps: htmlProps\n  };\n}\n/**\n * Prevent `onBlur` being fired when the checkbox label is touched\n */\n\n\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nvar _excluded = [\"spacing\", \"className\", \"children\", \"iconColor\", \"iconSize\", \"icon\", \"isChecked\", \"isDisabled\", \"onChange\"];\nvar CheckboxControl = chakra(\"span\", {\n  baseStyle: {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    verticalAlign: \"top\",\n    userSelect: \"none\",\n    flexShrink: 0\n  }\n});\nvar Label = chakra(\"label\", {\n  baseStyle: {\n    cursor: \"pointer\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    verticalAlign: \"top\",\n    position: \"relative\",\n    _disabled: {\n      cursor: \"not-allowed\"\n    }\n  }\n});\n/**\n * Checkbox\n *\n * React component used in forms when a user needs to select\n * multiple values from several options.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\n\nvar Checkbox = /*#__PURE__*/forwardRef(function (props, ref) {\n  var group = useCheckboxGroupContext();\n\n  var mergedProps = _extends({}, group, props);\n\n  var styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  var ownProps = omitThemingProps(props);\n\n  var _ownProps$spacing = ownProps.spacing,\n      spacing = _ownProps$spacing === void 0 ? \"0.5rem\" : _ownProps$spacing,\n      className = ownProps.className,\n      children = ownProps.children,\n      iconColor = ownProps.iconColor,\n      iconSize = ownProps.iconSize,\n      _ownProps$icon = ownProps.icon,\n      icon = _ownProps$icon === void 0 ? /*#__PURE__*/React.createElement(CheckboxIcon, null) : _ownProps$icon,\n      isCheckedProp = ownProps.isChecked,\n      _ownProps$isDisabled = ownProps.isDisabled,\n      isDisabled = _ownProps$isDisabled === void 0 ? group == null ? void 0 : group.isDisabled : _ownProps$isDisabled,\n      onChangeProp = ownProps.onChange,\n      rest = _objectWithoutPropertiesLoose(ownProps, _excluded);\n\n  var isChecked = isCheckedProp;\n\n  if (group != null && group.value && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n\n  var onChange = onChangeProp;\n\n  if (group != null && group.onChange && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n\n  var _useCheckbox = useCheckbox(_extends({}, rest, {\n    isDisabled: isDisabled,\n    isChecked: isChecked,\n    onChange: onChange\n  })),\n      state = _useCheckbox.state,\n      getInputProps = _useCheckbox.getInputProps,\n      getCheckboxProps = _useCheckbox.getCheckboxProps,\n      getLabelProps = _useCheckbox.getLabelProps,\n      getRootProps = _useCheckbox.getRootProps;\n\n  var iconStyles = React.useMemo(function () {\n    return _extends({\n      opacity: state.isChecked || state.isIndeterminate ? 1 : 0,\n      transform: state.isChecked || state.isIndeterminate ? \"scale(1)\" : \"scale(0.95)\",\n      fontSize: iconSize,\n      color: iconColor\n    }, styles.icon);\n  }, [iconColor, iconSize, state.isChecked, state.isIndeterminate, styles.icon]);\n  var clonedIcon = /*#__PURE__*/React.cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /*#__PURE__*/React.createElement(Label, _extends({\n    __css: styles.container,\n    className: cx(\"chakra-checkbox\", className)\n  }, getRootProps()), /*#__PURE__*/React.createElement(\"input\", _extends({\n    className: \"chakra-checkbox__input\"\n  }, getInputProps({}, ref))), /*#__PURE__*/React.createElement(CheckboxControl, _extends({\n    __css: styles.control,\n    className: \"chakra-checkbox__control\"\n  }, getCheckboxProps()), clonedIcon), children && /*#__PURE__*/React.createElement(chakra.span, _extends({\n    className: \"chakra-checkbox__label\"\n  }, getLabelProps(), {\n    __css: _extends({\n      marginStart: spacing\n    }, styles.label)\n  }), children));\n});\n\nif (__DEV__) {\n  Checkbox.displayName = \"Checkbox\";\n}\n\nexport { Checkbox, CheckboxGroup, useCheckbox, useCheckboxGroup, useCheckboxGroupContext };","import React, { createRef, useEffect, useState } from \"react\";\nimport lottie from 'lottie-web';\nimport animationData from 'animation/teddy.json';\nimport \"./splash-screen.css\";\nimport { Button, Flex, Text, Stack, Checkbox } from '@chakra-ui/react'\nimport { navigate } from \"gatsby\"\n\nconst SplashScreen = () => {\n    let animationContainer = createRef();\n    let anim = null;\n    useEffect(() => {\n        anim = lottie.loadAnimation({\n            container: animationContainer.current,\n            renderer: \"svg\",\n            loop: true,\n            autoplay: true,\n            animationData: animationData\n        });\n\n        return () => anim.destroy(); // optional clean up for unmounting\n    }, []);\n\n    const [isSplashScreenRememberChecked, setIsSplashScreenRememberChecked] = useState(true);\n\n    const handleRememberSplashScreen = () => {\n        setIsSplashScreenRememberChecked(!isSplashScreenRememberChecked)\n    }\n\n    const handleActionButton = (action) => {\n        // if (isSplashScreenRememberChecked) {\n        //     localStorage.setItem(\"showSplashScreen\", true);\n        // }\n\n        navigate(`/${action}`);\n    }\n\n    return (\n        <div className=\"splash-screen\">\n            <div className=\"splash-container\">\n                <div className=\"splash-image\" ref={animationContainer}></div>\n                <div className=\"splash-actions fade-in-image\">\n                    <Stack spacing={5}>\n                        <Text fontSize='4xl'>WELL HELLO THERE</Text>\n\n                        <Flex justifyContent=\"space-around\">\n                            <Button colorScheme='yellow' size='lg' onClick={() => handleActionButton('blog')}>\n                                View Blog\n                            </Button>\n                            <Button colorScheme='teal' size='lg' onClick={() => handleActionButton('profile')}>\n                                View Profile\n                            </Button>\n                        </Flex>\n\n                        <Flex flexWrap={true} justify=\"center\" iconColor='blue'>\n                            <Checkbox defaultChecked onChange={handleRememberSplashScreen}>I don't want to see Koala ever again</Checkbox>\n                        </Flex>\n                    </Stack>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default SplashScreen;","import React, { useState, useEffect } from \"react\"\nimport { graphql } from \"gatsby\"\nimport SplashScreen from \"components/splash/splash-screen\";\nimport Blog from \"./blog\";\n\nconst HomeIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  const [showSplashScreen, setShowSplashScreen] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // const showSplashScreenStorage = localStorage.getItem(\"showSplashScreen\");\n    // if (!showSplashScreenStorage) {\n    //   setShowSplashScreen(true);\n    // }\n  }, [])\n\n  return (\n    <>\n      {\n        showSplashScreen ? <SplashScreen /> : <Blog />\n      }\n    </>\n  )\n}\n\nexport default HomeIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded","_excluded2","NativeImage","props","ref","htmlWidth","htmlHeight","alt","rest","width","height","Image$1","fallbackSrc","fallback","src","srcSet","align","fit","loading","ignoreFallback","crossOrigin","shouldIgnore","undefined","status","onLoad","onError","sizes","_useState","useState","setStatus","useEffect","imageRef","useRef","load","useCallback","flush","img","Image","srcset","onload","event","onerror","error","current","useImage","shared","objectFit","objectPosition","as","className","displayName","data","posts","location","allMarkdownRemark","nodes","title","columns","spacing","justifyItems","map","post","frontmatter","fields","slug","maxW","borderWidth","borderRadius","overflow","TempBlog","p","Link","to","itemProp","mt","fontWeight","lineHeight","isTruncated","dangerouslySetInnerHTML","__html","description","excerpt","display","alignItems","color","fontSize","date","_excluded$2","_excluded2$1","_createContext","strict","name","FormControlProvider","useFormControlContext","FormControl","styles","_useFormControlProvid","idProp","id","isRequired","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","labelId","feedbackId","helpTextId","_React$useState","hasFeedbackText","setHasFeedbackText","_React$useState2","hasHelpText","setHasHelpText","_useBoolean","isFocused","setFocus","getHelpTextProps","forwardedRef","node","getLabelProps","_props$id","_props$htmlFor","htmlFor","getErrorMessageProps","getRootProps","role","getRequiredIndicatorProps","children","onFocus","on","onBlur","off","useFormControlProvider","context","cx","value","__css","FormHelperText","field","helperText","useFormControlProps","_ref","_ref2","_ref3","disabled","readOnly","required","labelIds","push","join","FormErrorMessage","ownProps","text","FormErrorIcon","_className","icon","fill","d","FormLabel","passedProps","_field$getLabelProps","_props$requiredIndica","requiredIndicator","RequiredIndicator","textAlign","useCheckboxGroupContext","MotionSvg","motion","CheckIcon","viewBox","variants","unchecked","opacity","strokeDashoffset","checked","transition","duration","style","strokeWidth","stroke","strokeDasharray","points","IndeterminateIcon","scaleX","x1","x2","y1","y2","CheckboxTransition","open","AnimatePresence","initial","scale","animate","exit","justifyContent","CheckboxIcon","isIndeterminate","isChecked","IconEl","stopEvent","preventDefault","stopPropagation","CheckboxControl","baseStyle","verticalAlign","userSelect","flexShrink","Label","cursor","position","_disabled","Checkbox","group","mergedProps","_ownProps$spacing","iconColor","iconSize","_ownProps$icon","isCheckedProp","_ownProps$isDisabled","onChangeProp","onChange","includes","_useCheckbox","formControlProps","ariaDescribedBy","_props","defaultIsChecked","_props$defaultChecked","defaultChecked","checkedProp","isFocusable","_props$tabIndex","tabIndex","ariaLabel","ariaLabelledBy","ariaInvalid","u","onBlurProp","onFocusProp","setFocused","_useBoolean2","isHovered","setHovered","_useBoolean3","isActive","setActive","inputRef","rootIsLabelElement","setRootIsLabelElement","_useState2","checkedState","setCheckedState","_useControllableProp","isControlled","condition","message","handleChange","indeterminate","Boolean","trulyDisabled","onKeyDown","onKeyUp","getCheckboxProps","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","tagName","onClick","_inputRef$current","click","nextTick","getInputProps","type","onTouchStart","state","useCheckbox","iconStyles","transform","clonedIcon","container","control","marginStart","label","animationContainer","createRef","anim","lottie","renderer","loop","autoplay","animationData","destroy","isSplashScreenRememberChecked","setIsSplashScreenRememberChecked","handleActionButton","action","navigate","colorScheme","size","flexWrap","justify","site","siteMetadata","showSplashScreen"],"sourceRoot":""}