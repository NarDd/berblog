{"version":3,"file":"component---src-pages-blog-js-bf6bd853dc2fc8e39771.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./node_modules/@chakra-ui/image/dist/chakra-ui-image.esm.js","webpack://gatsby-starter-blog/./src/images/temp-blog.jpg","webpack://gatsby-starter-blog/./src/pages/blog.js"],"sourcesContent":["import { forwardRef, chakra } from '@chakra-ui/system';\nimport { omit, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { useSafeLayoutEffect } from '@chakra-ui/hooks';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * React hook that loads an image in the browser,\n * and let's us know the `status` so we can show image\n * fallback if it is still `pending`\n *\n * @returns the status of the image loading progress\n *\n * @example\n *\n * ```jsx\n * function App(){\n *   const status = useImage({ src: \"image.png\" })\n *   return status === \"loaded\" ? <img src=\"image.png\" /> : <Placeholder />\n * }\n * ```\n */\n\n\nfunction useImage(props) {\n  var loading = props.loading,\n      src = props.src,\n      srcSet = props.srcSet,\n      onLoad = props.onLoad,\n      onError = props.onError,\n      crossOrigin = props.crossOrigin,\n      sizes = props.sizes,\n      ignoreFallback = props.ignoreFallback;\n\n  var _useState = useState(\"pending\"),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  useEffect(function () {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  var imageRef = useRef();\n  var load = useCallback(function () {\n    if (!src) return;\n    flush();\n    var img = new Image();\n    img.src = src;\n    if (crossOrigin) img.crossOrigin = crossOrigin;\n    if (srcSet) img.srcset = srcSet;\n    if (sizes) img.sizes = sizes;\n    if (loading) img.loading = loading;\n\n    img.onload = function (event) {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n\n    img.onerror = function (error) {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n\n  var flush = function flush() {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n\n  useSafeLayoutEffect(function () {\n    /**\n     * If user opts out of the fallback/placeholder\n     * logic, let's bail out.\n     */\n    if (ignoreFallback) return undefined;\n\n    if (status === \"loading\") {\n      load();\n    }\n\n    return function () {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  /**\n   * If user opts out of the fallback/placeholder\n   * logic, let's just return 'loaded'\n   */\n\n  return ignoreFallback ? \"loaded\" : status;\n}\n\nvar _excluded = [\"htmlWidth\", \"htmlHeight\", \"alt\"],\n    _excluded2 = [\"fallbackSrc\", \"fallback\", \"src\", \"srcSet\", \"align\", \"fit\", \"loading\", \"ignoreFallback\", \"crossOrigin\"];\nvar NativeImage = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var htmlWidth = props.htmlWidth,\n      htmlHeight = props.htmlHeight,\n      alt = props.alt,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"img\", _extends({\n    width: htmlWidth,\n    height: htmlHeight,\n    ref: ref,\n    alt: alt\n  }, rest));\n});\n/**\n * React component that renders an image with support\n * for fallbacks\n *\n * @see Docs https://chakra-ui.com/image\n */\n\nvar Image$1 = /*#__PURE__*/forwardRef(function (props, ref) {\n  var fallbackSrc = props.fallbackSrc,\n      fallback = props.fallback,\n      src = props.src,\n      srcSet = props.srcSet,\n      align = props.align,\n      fit = props.fit,\n      loading = props.loading,\n      ignoreFallback = props.ignoreFallback,\n      crossOrigin = props.crossOrigin,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n  /**\n   * Defer to native `img` tag if `loading` prop is passed\n   * @see https://github.com/chakra-ui/chakra-ui/issues/1027\n   */\n\n\n  var shouldIgnore = loading != null || ignoreFallback || fallbackSrc === undefined && fallback === undefined; // if the user doesn't provide any kind of fallback we should ignore it\n\n  var status = useImage(_extends({}, props, {\n    ignoreFallback: shouldIgnore\n  }));\n\n  var shared = _extends({\n    ref: ref,\n    objectFit: fit,\n    objectPosition: align\n  }, shouldIgnore ? rest : omit(rest, [\"onError\", \"onLoad\"]));\n\n  if (status !== \"loaded\") {\n    /**\n     * If user passed a custom fallback component,\n     * let's render it here.\n     */\n    if (fallback) return fallback;\n    return /*#__PURE__*/React.createElement(chakra.img, _extends({\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc\n    }, shared));\n  }\n\n  return /*#__PURE__*/React.createElement(chakra.img, _extends({\n    as: NativeImage,\n    src: src,\n    srcSet: srcSet,\n    crossOrigin: crossOrigin,\n    loading: loading,\n    className: \"chakra-image\"\n  }, shared));\n});\n/**\n * Fallback component for most SSR users who want to use the native `img` with\n * support for chakra props\n */\n\nvar Img = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(chakra.img, _extends({\n    ref: ref,\n    as: NativeImage,\n    className: \"chakra-image\"\n  }, props));\n});\n\nif (__DEV__) {\n  Image$1.displayName = \"Image\";\n}\n\nexport { Image$1 as Image, Img, useImage };","export default __webpack_public_path__ + \"static/temp-blog-f08846e370c78ea6066fd23c6a1c2ff9.jpg\";","import React from \"react\";\nimport { SimpleGrid, Box, Image, VStack } from '@chakra-ui/react'\nimport TempBlog from '../images/temp-blog.jpg';\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout/layout\";\nimport Seo from \"../components/layout/seo\";\n\nconst Blog = ({ data, location }) => {\n    const posts = data.allMarkdownRemark.nodes;\n\n    return (\n        <Layout>\n            <Seo title=\"All posts\" />\n            <SimpleGrid columns={[1, null, 2, 3]} spacing='40px' justifyItems=\"center\">\n                {\n                    posts.map(post => {\n                        const title = post.frontmatter.title || post.fields.slug\n                        return (\n                            <Box maxW='sm' borderWidth='1px' borderRadius='lg' overflow='hidden' className=\"blog-card\" key={post.fields.slug}>\n                                <Image src={TempBlog} alt=\"temporary image\" />\n                                <Box p='6'>\n                                    <VStack spacing={4} align=\"flex-start\">\n                                        <Link to={post.fields.slug} itemProp=\"url\">\n                                            <Box\n                                                mt='1'\n                                                fontWeight='semibold'\n                                                as='h4'\n                                                lineHeight='tight'\n                                                isTruncated\n                                            >\n                                                {title}\n                                            </Box>\n\n                                            <Box>\n                                                <p\n                                                    dangerouslySetInnerHTML={{\n                                                        __html: post.frontmatter.description || post.excerpt,\n                                                    }}\n                                                    itemProp=\"description\"\n                                                />\n                                            </Box>\n                                        </Link>\n\n\n                                        <Box display='flex' mt='2' alignItems='center'>\n                                            <Box as='span' color='gray.600' fontSize='sm'>\n                                                {post.frontmatter.date}\n                                            </Box>\n                                        </Box>\n                                    </VStack>\n\n                                </Box>\n                            </Box>\n                        )\n                    })\n                }\n            </SimpleGrid>\n        </Layout>\n    )\n}\n\nexport default Blog;\n\n\nexport const pageQuery = graphql`\n            query {\n                site {\n                siteMetadata {\n                title\n            }\n    }\n            allMarkdownRemark(sort: {fields: [frontmatter___date], order: DESC }) {\n                nodes {\n                excerpt\n        fields {\n                slug\n            }\n            frontmatter {\n                date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n        }\n      }\n    }\n  }\n            `\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded","_excluded2","NativeImage","props","ref","htmlWidth","htmlHeight","alt","rest","width","height","Image$1","fallbackSrc","fallback","src","srcSet","align","fit","loading","ignoreFallback","crossOrigin","shouldIgnore","undefined","status","onLoad","onError","sizes","_useState","useState","setStatus","useEffect","imageRef","useRef","load","useCallback","flush","img","Image","srcset","onload","event","onerror","error","current","useImage","shared","objectFit","objectPosition","as","className","displayName","data","posts","location","allMarkdownRemark","nodes","title","columns","spacing","justifyItems","map","post","frontmatter","fields","slug","maxW","borderWidth","borderRadius","overflow","TempBlog","p","Link","to","itemProp","mt","fontWeight","lineHeight","isTruncated","dangerouslySetInnerHTML","__html","description","excerpt","display","alignItems","color","fontSize","date"],"sourceRoot":""}